steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/adc-cicd/adc-cr-demo:latest', '--build-arg', 'IMAGE_TAG=latest', '-f', 'adc-cr-demo/Dockerfile', '.']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
      - -c
      - |
       echo "Updating apt-get and installing jq..."
       apt-get update && apt-get install -y jq curl
       
       echo "Fetching latest app config..."
       gcloud alpha design-center spaces applications describe viojha-test-app --space=managed-space --project=$PROJECT_ID --location=us-central1   --format="json(componentParameters)" | jq '.componentParameters | map(del(.state, .componentParameterSchema))' > component_parameters.json
              
       echo "Updating frontend CR image....."
       jq 'map(if .parameters[] | select(.key == "service_name").value == "fc-001" then .parameters |= map(if .key == "containers" then .value |= map(.container_image = "'"${_IMAGE_NAME}"'") else . end) else . end)' component_parameters.json > temp.json && mv temp.json component_parameters.json
       
       gcloud alpha design-center spaces applications update viojha-test-app   --space=managed-space --project=$PROJECT_ID --location=us-central1   --component-parameters=component_parameters.json
              
       echo "Deploying application....."
       
       gcloud alpha design-center spaces applications deploy viojha-test-app --space=managed-space --project=$PROJECT_ID --location=us-central1 --async

       
       rm -f component_parameters.json
images: ['${_IMAGE_NAME}']
substitutions:
    _IMAGE_NAME: 'gcr.io/${PROJECT_ID}/adc-cicd/adc-cr-demo:latest'
options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
